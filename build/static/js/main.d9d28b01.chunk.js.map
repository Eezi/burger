{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/Layout/Layout.module.css","assets/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/Navigationitems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","hoc/Pux.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/ToolBar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","console","log","modalClosed","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","instance","axios","create","baseURL","spinner","Loader","withErrorHandler","WrappedComponent","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","BurgerBuilder","purchasing","loading","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","history","push","sum","disabledInfo","ings","orderSummary","Spinner","onIngredientAdded","onIngredientRemoved","updatePurchaseState","connect","totalPrice","dispatch","ingName","ingredientName","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipcode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","post","then","catch","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","isEmail","test","isNumeric","formElementsArray","id","config","form","onSubmit","formElement","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","query","URLSearchParams","location","search","entries","param","path","match","component","amount","ingredientOutput","ig","display","border","padding","Order","Number","parseFloat","orders","get","fetchedOrders","data","err","App","Orders","Boolean","window","hostname","initialState","salad","bacon","cheese","meat","INGREDIENT_PRICES","reducer","action","store","createStore","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d9d28b01.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__1erD6\",\"BreadTop\":\"BurgerIngredient_BreadTop__2MyY1\",\"Seeds1\":\"BurgerIngredient_Seeds1__C17jc\",\"Seeds2\":\"BurgerIngredient_Seeds2__3w6o5\",\"Meat\":\"BurgerIngredient_Meat__2h0pj\",\"Cheese\":\"BurgerIngredient_Cheese__W8hq-\",\"Salad\":\"BurgerIngredient_Salad__8lh8d\",\"Bacon\":\"BurgerIngredient_Bacon__F117e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__2oGlE\",\"Open\":\"SideDrawer_Open__3ecMl\",\"Close\":\"SideDrawer_Close__1pMv0\",\"Logo\":\"SideDrawer_Logo__1iorg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__P0W4b\",\"Label\":\"BuildControl_Label__1euND\",\"Less\":\"BuildControl_Less__4VCU_\",\"More\":\"BuildControl_More__Cb83d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2RtNF\",\"Label\":\"Input_Label__3MdKu\",\"InputElement\":\"Input_InputElement__xjGDa\",\"Invalid\":\"Input_Invalid__1pFVV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__2jRjp\",\"Logo\":\"Toolbar_Logo__2ZhzJ\",\"DesktopOnly\":\"Toolbar_DesktopOnly__1V1t5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2pA-E\",\"active\":\"NavigationItem_active__QTIj3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__2aTL8\",\"OrderButton\":\"BuildControls_OrderButton__n2tTY\",\"enable\":\"BuildControls_enable__2QCeW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__11eRs\",\"Success\":\"Button_Success__8NClC\",\"Danger\":\"Button_Danger__2nmiq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__2q1uL\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1BPBm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"Navigationitems_NavigationItems__1M5O_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__2tik1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2do2x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__3_R_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__26gH6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__VaGh6\",\"load2\":\"Spinner_load2__2sxv7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__e4TmH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__1IJd5\",\"Input\":\"ContactData_Input__3iWbo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__27blZ\"};","const aux = (props) => props.children;\r\n\r\nexport default aux;","import React from 'react';\r\nimport burgerLogo from '../../assets/burger-logo.png';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo} style={{height: props.height}}>\r\n        <img src={burgerLogo} alt=\"MyBurger\" />\r\n    </div>\r\n\r\n);\r\n\r\nexport default logo;","import React from 'react'\r\nimport {NavLink } from 'react-router-dom'\r\nimport classes from './NavigationItem.module.css'\r\n\r\nconst navigationItem = (props) => (\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink \r\n        to={props.link}\r\n        exact={props.exact}\r\n        activeClassName={classes.active}>{props.children}</NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react'\r\nimport classes from './Navigationitems.module.css'\r\nimport NavigationItem from './NavigationItem/NavigationItem'\r\n\r\nconst navigationItems = () => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/\" exact >Burger Builder</NavigationItem>\r\n        <NavigationItem link=\"/orders\">Orders</NavigationItem>\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react'\r\nimport classes from './DrawerToggle.module.css'\r\n\r\nconst drawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle'\r\n\r\nconst toolbar = ( props ) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked} />\r\n        <div className={classes.Logo}>\r\n            <Logo />\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems />\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\n\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react'\r\nimport Logo from '../../Logo/Logo'\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport classes from './SideDrawer.module.css'\r\nimport Backdrop from '../../UI/Backdrop/Backdrop'\r\nimport Aux from '../../../hoc/Pux'\r\n\r\n\r\nconst sideDrawer = ( props ) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n    if (props.open) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n    return (\r\n        <Aux>\r\n            <Backdrop show={props.open} clicked={props.closed}/>\r\n            <div className={attachedClasses.join(' ')}>\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default sideDrawer;","import React, {Component} from 'react';\r\nimport Aux from '../../hoc/Pux';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../Navigation/Toolbar/ToolBar';\r\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState( { showSideDrawer: false } );\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState( ( prevState ) => {\r\n            return { showSideDrawer: !prevState.showSideDrawer };\r\n        } );\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Aux>\r\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler} />\r\n                <SideDrawer\r\n                    open={this.state.showSideDrawer}\r\n                    closed={this.sideDrawerClosedHandler} />\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classes from './BurgerIngredient.module.css';\r\n\r\nclass BurgerIngredient extends Component {\r\n    render () {\r\n        let ingredient = null;\r\n\r\n        switch ( this.props.type ) {\r\n            case ( 'bread-bottom' ):\r\n                ingredient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            case ( 'bread-top' ):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case ( 'meat' ):\r\n                ingredient = <div className={classes.Meat}></div>;\r\n                break;\r\n            case ( 'cheese' ):\r\n                ingredient = <div className={classes.Cheese}></div>;\r\n                break;\r\n            case ( 'bacon' ):\r\n                ingredient = <div className={classes.Bacon}></div>;\r\n                break;\r\n            case ( 'salad' ):\r\n                ingredient = <div className={classes.Salad}></div>;\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n        }\r\n\r\n        return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\n\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\nconst burger = ( props ) => {\r\n    let transformedIngredients = Object.keys( props.ingredients )\r\n        .map( igKey => {\r\n            return [...Array( props.ingredients[igKey] )].map( ( _, i ) => {\r\n                return <BurgerIngredient key={igKey + i} type={igKey} />;\r\n            } );\r\n        } )\r\n        .reduce((arr, el) => {\r\n            return arr.concat(el)\r\n        }, []);\r\n    if (transformedIngredients.length === 0) {\r\n        transformedIngredients = <p>Please start adding ingredients!</p>;\r\n    }\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button \r\n            className={classes.Less} \r\n            onClick={props.removed} \r\n            disabled={props.disabled}>Less</button>\r\n        <button \r\n            className={classes.More} \r\n            onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\n\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Bacon', type: 'bacon' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Meat', type: 'meat' },\r\n];\r\n\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl \r\n                key={ctrl.label} \r\n                label={ctrl.label}\r\n                added={() => props.ingredientAdded(ctrl.type)}\r\n                removed={() => props.ingredientRemoved(ctrl.type)}\r\n                disabled={props.disabled[ctrl.type]} />\r\n        ))}\r\n        <button \r\n            className={classes.OrderButton}\r\n            disabled={!props.purchasable}\r\n            onClick={props.ordered}>ORDER NOW</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React, { Component } from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Aux from '../../../hoc/Pux';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n            return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n        }\r\n    componentWillUpdate () {\r\n        console.log('[modal] WillUpdate');\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <Aux>\r\n        <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n        <div\r\n            className={classes.Modal}\r\n            style={{\r\n                transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                opacity: this.props.show ? '1' : '0'\r\n            }}>\r\n            {this.props.children}\r\n        </div>\r\n    </Aux>\r\n        )\r\n        }\r\n    }\r\n\r\nexport default Modal;","import React from 'react'\r\nimport classes from './Button.module.css'\r\n\r\nconst button = (props) => (\r\n    <button\r\n        disabled={props.disabled}\r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}>{props.children}</button>\r\n);\r\n\r\nexport default button;","import React, { Component } from 'react';\r\nimport Aux from '../../../hoc/Pux';\r\n\r\nimport Button from '../../UI/Button/Button';\r\nclass OrderSummary extends Component  {\r\n    //Tämä componentti voisi olla myös function component\r\n    componentWillUpdate() {\r\n        console.log('[OrderSummary] WillUpdate');\r\n    }\r\n    render() {\r\n        const ingredientSummary = Object.keys(this.props.ingredients)\r\n        .map(igKey => {\r\n        return (\r\n            <li key={igKey}>\r\n                <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {this.props.ingredients[igKey]}\r\n            </li> );\r\n        } );\r\n        \r\n    \r\n        return (\r\n        <Aux>\r\n                <h3>Your Order</h3>\r\n                <p>A delicious burger with the following ingredients:</p>\r\n                <ul>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                <p><strong>Total Price: {this.props.price.toFixed(2)}</strong></p>\r\n                <p>Continue to Checkout?</p>\r\n            <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>CANCEL</Button>\r\n            <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\r\n        </Aux>\r\n        );\r\n        \r\n    }\r\n}\r\nexport default OrderSummary;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-burger-57c92.firebaseio.com/'\r\n})\r\n\r\nexport default instance;","import React from 'react'\r\nimport classes from './Spinner.module.css'\r\n//Tehdään css spinner\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React, {Component} from 'react';\r\nimport Modal from '../../components/UI/Modal/Modal'\r\nimport Aux from '../Pux';\r\n\r\n//Tämän componentin avulla käsitellään erroreja\r\nconst withErrorHandler = ( WrappedComponent, axios ) => {\r\n    return class extends Component {\r\n        state = {\r\n            error: null\r\n        }\r\n\r\n        componentWillMount () {\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({error: null});\r\n                return req;\r\n            });\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({error: error});\r\n            });\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({error: null});\r\n        }\r\n\r\n        render () {\r\n            return (\r\n                <Aux>\r\n                    <Modal \r\n                        show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Aux>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Aux from '../../hoc/Pux';\r\n\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport axios from '../../axios-orders'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\r\nimport * as actionTypes from '../../store/actions';\r\n\r\nclass BurgerBuilder extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = {...}\r\n    // }\r\n    state = {\r\n        purchasing: false,\r\n        loading: false,\r\n        error: false\r\n    }\r\n\r\n    componentDidMount () {\r\n        console.log(this.props);\r\n        // axios.get( 'https://react-my-burger.firebaseio.com/ingredients.json' )\r\n        //     .then( response => {\r\n        //         this.setState( { ingredients: response.data } );\r\n        //     } )\r\n        //     .catch( error => {\r\n        //         this.setState( { error: true } );\r\n        //     } );\r\n    }\r\n\r\n    updatePurchaseState ( ingredients ) {\r\n        const sum = Object.keys( ingredients )\r\n            .map( igKey => {\r\n                return ingredients[igKey];\r\n            } )\r\n            .reduce( ( sum, el ) => {\r\n                return sum + el;\r\n            }, 0 );\r\n        return sum > 0;\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState( { purchasing: true } );\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState( { purchasing: false } );\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.props.history.push('/checkout');\r\n    }\r\n\r\n    render () {\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n        for ( let key in disabledInfo ) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n        let orderSummary = null;\r\n        let burger = this.state.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\r\n\r\n        if ( this.props.ings ) {\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients={this.props.ings} />\r\n                    <BuildControls\r\n                        ingredientAdded={this.props.onIngredientAdded}\r\n                        ingredientRemoved={this.props.onIngredientRemoved}\r\n                        disabled={disabledInfo}\r\n                        purchasable={this.updatePurchaseState(this.props.ings)}\r\n                        ordered={this.purchaseHandler}\r\n                        price={this.props.price} />\r\n                </Aux>\r\n            );\r\n            orderSummary = <OrderSummary\r\n                ingredients={this.props.ings}\r\n                price={this.props.price}\r\n                purchaseCancelled={this.purchaseCancelHandler}\r\n                purchaseContinued={this.purchaseContinueHandler} />;\r\n        }\r\n        if ( this.state.loading ) {\r\n            orderSummary = <Spinner />;\r\n        }\r\n        // {salad: true, meat: false, ...}\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.ingredients,\r\n        price: state.totalPrice\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch({type: actionTypes.ADD_INGREDIENTS, ingredientName: ingName}),\r\n        onIngredientRemoved: (ingName) => dispatch({type: actionTypes.REMOVE_INGREDIENT, ingredientName: ingName})\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler( BurgerBuilder, axios ));","export const ADD_INGREDIENTS = 'ADD_INGREDIENTS';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\n\r\n","import React from 'react';\r\n\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.module.css';\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it tastes well!</h1>\r\n            <div style={{width: '100%', margin: 'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n            <Button \r\n                btnType=\"Danger\"\r\n                clicked={props.checkoutCancelled}>CANCEL</Button>\r\n            <Button \r\n                btnType=\"Success\"\r\n                clicked={props.checkoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default checkoutSummary;","import React from 'react'\r\nimport classes from './Input.module.css'\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(classes.Invalid)\r\n    }\r\n\r\n    switch ( props.elementType ) {\r\n        case ( 'input' ):\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ( 'textarea' ):\r\n            inputElement = <textarea\r\n                className={inputClasses}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ( 'select' ):\r\n            inputElement = (\r\n                <select\r\n                    className={inputClasses}\r\n                    value={props.value}\r\n                    onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement = <input\r\n                className={inputClasses}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default input;","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux';\r\nimport Button from '../../../components/UI/Button/Button'\r\nimport Spinner from '../../../components/UI/Spinner/Spinner'\r\nimport classes from './ContactData.module.css'\r\nimport axios from '../../../axios-orders'\r\nimport Input from '../../../components/UI/Input/Input'\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        //Alustetaan form data\r\n        orderForm: {\r\n                name: { \r\n                  elementType: 'input',\r\n                  elementConfig: {\r\n                      type: 'text',\r\n                      placeholder: 'Your name'\r\n                  },\r\n                  value: '',\r\n                  validation: {\r\n                      required: true\r\n                     \r\n                  },\r\n                  valid: false,\r\n                  touched: false\r\n                },\r\n                street: { \r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'text',\r\n                        placeholder: 'Street'\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: true\r\n                    },\r\n                    valid: false,\r\n                    touched: false\r\n                  },\r\n                zipcode: { \r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'text',\r\n                        placeholder: 'ZIP Code'\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: true,\r\n                        minLength: 5,\r\n                        maxLength: 5\r\n                    },\r\n                    valid: false,\r\n                    touched: false\r\n                  },\r\n                country: { \r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'text',\r\n                        placeholder: 'Country'\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: true\r\n                    },\r\n                    valid: false,\r\n                    touched: false\r\n                  },\r\n                email: { \r\n                    elementType: 'input',\r\n                    elementConfig: {\r\n                        type: 'email',\r\n                        placeholder: 'Your E-Mail'\r\n                    },\r\n                    value: '',\r\n                    validation: {\r\n                        required: true\r\n                    },\r\n                    valid: false,\r\n                    touched: false\r\n                  },\r\n                deliveryMethod: { \r\n                    elementType: 'select',\r\n                    elementConfig: {\r\n                        options: [\r\n                            {value : 'fastest', displayValue: 'Fastest'},\r\n                            {value : 'cheapest', displayValue: 'Cheapest'}\r\n                        ]\r\n                        \r\n                    },\r\n                    value: 'fastest',\r\n                    validation: {},\r\n                    valid: true\r\n                  },\r\n        },\r\n        formIsValid: false,\r\n        loading: false\r\n    }\r\n    orderHandler = ( event ) => {\r\n        event.preventDefault();\r\n        this.setState( { loading: true } );\r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.orderForm) {\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            price: this.props.price,\r\n            orderData: formData\r\n        }\r\n        axios.post( '/orders.json', order )\r\n            .then( response => {\r\n                this.setState( { loading: false } );\r\n                this.props.history.push( '/' );\r\n            } )\r\n            .catch( error => {\r\n                this.setState( { loading: false } );\r\n            } );\r\n    }\r\n\r\n    checkValidity(value, rules) {\r\n        let isValid = true;\r\n        if (!rules) {\r\n            return true;\r\n        }\r\n        \r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        };\r\n        const updatedFormElement = { \r\n            ...updatedOrderForm[inputIdentifier]\r\n        };\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n        \r\n        let formIsValid = true;\r\n        for (let inputIdentifier in updatedOrderForm) {\r\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\r\n    }\r\n\r\n    render () {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n        }\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {formElementsArray.map(formElement => (\r\n                    <Input \r\n                        key={formElement.id}\r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value}\r\n                        invalid={!formElement.config.valid}\r\n                        shouldValidate={formElement.config.validation}\r\n                        touched={formElement.config.touched}\r\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\r\n                ))}\r\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\r\n            </form>\r\n        );\r\n        if ( this.state.loading ) {\r\n            form = <Spinner />;\r\n        }\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your Contact Data</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.ingredients,\r\n        price: state.totalPrice\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactData);","import React, {Component} from 'react'\r\nimport {Route} from 'react-router-dom';\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary'\r\nimport ContactData from './ContactData/ContactData'\r\nimport {connect } from 'react-redux';\r\n\r\nclass Checkout extends Component {\r\n    state = {\r\n        ingredients: null,\r\n        price: 0\r\n    }\r\n\r\n    componentWillMount () {\r\n        const query = new URLSearchParams( this.props.location.search );\r\n        const ingredients = {};\r\n        let price = 0;\r\n        for ( let param of query.entries() ) {\r\n            // ['salad', '1']\r\n            if (param[0] === 'price') {\r\n                price = param[1];\r\n            } else {\r\n                ingredients[param[0]] = +param[1];\r\n            }\r\n        }\r\n        this.setState( { ingredients: ingredients, totalPrice: price } );\r\n    }\r\n\r\n\r\n    checkoutCancelledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace( '/checkout/contact-data' );\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <CheckoutSummary\r\n                    ingredients={this.props.ings}\r\n                    checkoutCancelled={this.checkoutCancelledHandler}\r\n                    checkoutContinued={this.checkoutContinuedHandler} />\r\n                <Route \r\n                    path={this.props.match.path + '/contact-data'} \r\n                    component={ContactData}/>\r\n                    render={(props) => (<ContactData ingredients={this.state.ingredients} price={this.state.totalPrice} {...props} />)} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n//Connectataan pelkkä data tänne\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.ingredients,\r\n        \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Checkout);\r\n\r\n","import React from 'react'\r\nimport classes from './Order.module.css'\r\n\r\nconst order = ( props ) => {\r\n    const ingredients = [];\r\n\r\n    for ( let ingredientName in props.ingredients ) {\r\n        ingredients.push(\r\n            {\r\n                name: ingredientName,\r\n                amount: props.ingredients[ingredientName]\r\n            }\r\n        );\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span \r\n            style={{\r\n                textTransform: 'capitalize',\r\n                display: 'inline-block',\r\n                margin: '0 8px',\r\n                border: '1px solid #ccc',\r\n                padding: '5px'\r\n                }}\r\n            key={ig.name}>{ig.name} ({ig.amount})</span>;\r\n    });\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>{Number.parseFloat( props.price ).toFixed( 2 )} €</strong></p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default order;","import React, {Component} from 'react';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\nclass Orders extends Component {\r\n    state = {\r\n        orders: [],\r\n        loading: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('/orders.json')\r\n        .then(res => {\r\n            const fetchedOrders = [];\r\n            for (let key in res.data) {\r\n                fetchedOrders.push({\r\n                    ...res.data[key],\r\n                    id: key\r\n                });\r\n            }\r\n            this.setState({loading: false, orders: fetchedOrders});\r\n        })\r\n        .catch(err => {\r\n            this.setState({loading: false});\r\n        });\r\n}\r\n\r\nrender () {\r\n    return (\r\n        <div>\r\n            {this.state.orders.map(order => (\r\n                <Order \r\n                    key={order.id}\r\n                    ingredients={order.ingredients}\r\n                    price={order.price} />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n}\r\n\r\nexport default withErrorHandler(Orders, axios);","import React, { Component } from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport Layout from './components/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\n\nclass App extends Component {\n  render() {\n  return (\n    <div>\n      <Layout>\n        <Switch>\n         <Route path=\"/checkout\" component={ Checkout } />\n         <Route path=\"/orders\" component={ Orders } />\n         <Route path=\"/\" exact component={ BurgerBuilder } />\n        </Switch>\n      </Layout>\n    </div>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from './actions';\r\n\r\nconst initialState = {\r\n        ingredients: {\r\n            salad: 0,\r\n            bacon: 0,\r\n            cheese: 0,\r\n            meat: 0\r\n        },    \r\n        totalPrice: 4  \r\n};\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n};\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.ADD_INGREDIENTS:\r\n            return {\r\n                //Kopiodaan data jotta alkuperäistä ei mutatoida\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    //kopiodaan data toiseen muuttujaan ja lisätään siihen aina 1 kun lisäys tapahtuu\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\r\n                },\r\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n            }\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                   \r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\r\n                },\r\n                totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {createStore} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport reducer from './store/reducer';\r\n\r\nconst store = createStore(reducer);\r\n\r\nconst app = (\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n)\r\n\r\nReactDOM.render( app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}